{"version":3,"sources":["simple-map.png","icon-up.gif","Navbar.js","Card.js","LinkButton.js","ClusterBubble.js","ClusterSummary.js","Dashboard.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","Container","React","Component","Card","style","backgroundColor","padding","margin","borderRadius","boxShadow","fontSize","fontWeight","this","props","title","children","LinkButton","textAlign","float","tailing","ClusterBubble","width","radius","height","top","y","left","x","borderWidth","lineHeight","active","color","number","name","percentage","IconChart","mediaType","icon","faVideo","faImage","faWindowRestore","order","type","value","ClusterSummary","cloudFontSize","Math","log2","cloudFonrColor","state","current","activeCluster","clickCluster","bind","activeClusterList","setState","console","log","COLORS","data","clusters","words","RADIAN","PI","Row","Col","md","Button","variant","onClick","marginTop","subtitle","minHeight","options","fontFamily","rotations","rotationAngles","slice","right","bottom","strokeDasharray","dataKey","interval","fill","marginBottom","isAnimationActive","categories","outerRadius","label","cx","cy","midAngle","innerRadius","percent","index","cos","sin","textAnchor","dominantBaseline","toFixed","labelLine","map","entry","key","length","types","ClickedRate","dataRadar","A","B","fullMark","App","noGutters","position","src","IconUp","id","x1","y1","x2","y2","offset","stopColor","stopOpacity","stroke","fillOpacity","SimpleMap","align","verticalAlign","Dashboard","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.b60bd4c0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/simple-map.36f7d86e.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-up.a489bbb8.gif\";","import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport './Navbar.css'\n\nclass Navbar extends React.Component {\n  render() {\n\n    return (\n      <div className=\"n-nav\">\n        <Container>\n          <h1><b>Dashboard</b></h1>\n        </Container>\n      </div>\n    )\n  }\n}\n\nexport default Navbar","import React from 'react'\n\nclass Card extends React.Component {\n  render() {\n    const card = {\n      backgroundColor: 'white',\n      padding: '15px 25px 1px',\n      margin: '10px',\n      borderRadius: '20px',\n      boxShadow: '0px 4px 100px 0px rgba(0,0,0,0.1)',\n    }\n\n    return (\n      <div style={card}>\n        <p style={{fontSize:\"20px\", fontWeight:'bolder'}}>{this.props.title}</p>\n        {this.props.children}\n      </div>\n    )\n  }\n}\n\nexport default Card","import React from 'react'\nimport './LinkButton.css'\n\nclass LinkButton extends React.Component {\n  render() {\n    return (\n      <div className=\"link-button\">\n        <span style={{textAlign:'left'}}>\n          {this.props.title}\n          <span style={{float:'right'}}>\n            <b>{this.props.tailing}</b>\n          </span>\n        </span>\n      </div>\n    )\n  }\n}\n\nexport default LinkButton","import React from 'react'\nimport './ClusterBubble.css'\n\nclass ClusterBubble extends React.Component {\n  render() {\n    return (\n      <div style={{\n        width:`${this.props.radius*2}px`, \n        height:`${this.props.radius*2}px`, \n        top:`${this.props.y}px`, left:`${this.props.x}px`,\n        borderWidth: '1px',\n        lineHeight:`${this.props.radius*2}px`,\n        backgroundColor: this.props.active ? '#2f2f2f' : '#e0e0e0',\n        color: this.props.active ? 'white' : 'black',\n        }} \n        className=\"bubble\">\n        <div className='label'>\n          {this.props.number} {this.props.name} ({this.props.percentage}%)\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default ClusterBubble","import React from 'react'\nimport Card from './Card'\nimport LinkButton from './LinkButton'\nimport ClusterBubble from './ClusterBubble'\nimport { Row, Col, Button } from 'react-bootstrap'\nimport ReactWordcloud from 'react-wordcloud';\n// import WordCloud from \"react-d3-cloud\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faVideo, faImage, faWindowRestore } from '@fortawesome/free-solid-svg-icons'\n// import TagCloud from 'react-tag-cloud';\nimport data from './data.json'\n\nimport {\n  BarChart, Bar, Cell, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer\n} from 'recharts';\n\nimport {\n  PieChart, Pie,\n} from 'recharts';\n\n\nclass IconChart extends React.Component {\n\n  render() {\n\n    const mediaType = [\n      { name: 'Video', icon: faVideo },\n      { name: 'Banner', icon: faImage },\n      { name: 'Pop-up', icon: faWindowRestore },\n    ]\n\n    if (this.props.order == 1) {\n      return (\n        <div>\n          <FontAwesomeIcon style={{ fontSize: '80px', }} icon={mediaType[this.props.type].icon} />\n          <p style={{ fontSize: '28px' }}>{this.props.value}% {mediaType[this.props.type].name}</p>\n        </div>\n      )\n    } else if (this.props.order == 2) {\n      return (\n        <div>\n          <FontAwesomeIcon style={{ fontSize: '30px' }} icon={mediaType[this.props.type].icon} />\n          <p>{this.props.value}% {mediaType[this.props.type].name}</p>\n        </div>\n      )\n    } else if (this.props.order == 3) {\n      return (\n        <div>\n          <FontAwesomeIcon style={{ fontSize: '20px' }} icon={mediaType[this.props.type].icon} />\n          <p>{this.props.value}% {mediaType[this.props.type].name}</p>\n        </div>\n      )\n    }\n    return (\n      <p>Loading</p>\n    )\n  }\n}\n\n\nclass ClusterSummary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      current: 0,\n      activeCluster: [false, false, false, false]\n    }\n    // this.handleInputLink = this.handleInputLink.bind(this)\n    // this.handleInputName = this.handleInputName.bind(this)\n    // this.handleSubmit = this.handleSubmit.bind(this)\n    this.clickCluster = this.clickCluster.bind(this)\n  }\n\n  subtitle() {\n    if (this.state.current == 0)\n      return 'Overall Summary'\n    else \n      return `Cluster #${this.state.current} Summary`\n  }\n\n  clickCluster(number) {\n    var activeClusterList = [false, false, false, false]\n    if (number > 0)\n      activeClusterList[number - 1] = true\n    this.setState({current: number})\n    this.setState({activeCluster: activeClusterList})\n    console.log(number)\n  }\n\n  cloudFontSize = (value) => Math.log2(value) * 5\n  cloudFonrColor = (value) => ``\n\n  \n  render() {\n    const wtopics = [\n        {\"text\": \"Test\", \"value\": 23423},\n        {\"text\": \"Test2\", \"value\": 2423},\n        {\"text\": \"Test3\", \"value\": 27}\n    ]\n\n    const topics = data.clusters[this.state.current].words\n\n    const dataX = [\n      {\n        name: 'Page A', uv: 4000, pv: 2400, amt: 2400,\n      },\n      {\n        name: 'Page B', uv: 3000, pv: 1398, amt: 2210,\n      },\n      {\n        name: 'Page C', uv: 2000, pv: 9800, amt: 2290,\n      },\n      {\n        name: 'Page D', uv: 2780, pv: 3908, amt: 2000,\n      },\n      {\n        name: 'Page E', uv: 1890, pv: 4800, amt: 2181,\n      },\n      {\n        name: 'Page F', uv: 2390, pv: 3800, amt: 2500,\n      },\n      {\n        name: 'Page G', uv: 3490, pv: 4300, amt: 2100,\n      },\n    ];\n\n    const data01 = [\n      { name: 'Group A', value: 400 }, { name: 'Group B', value: 300 },\n      { name: 'Group C', value: 300 }, { name: 'Group C', value: 300 }, { name: 'Group C', value: 300 }, { name: 'Group C', value: 300 },\n    ];\n\n    const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n\n    const RADIAN = Math.PI / 180;\n    const renderCustomizedLabel = ({\n      cx, cy, midAngle, innerRadius, outerRadius, percent, index,\n    }) => {\n      const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n      const x = cx + radius * Math.cos(-midAngle * RADIAN);\n      const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n      return (\n        <text style={{ fontSize: '12px' }} x={x} y={y} fill=\"black\" textAnchor={x > cx ? 'start' : 'end'} dominantBaseline=\"central\">\n          {`${(percent * 100).toFixed(0)}% ${data.clusters[this.state.current].categories[index].name}`}\n        </text>\n      );\n    };\n\n    const fontSizeMapper = word => Math.log2(word.value) * 5;\n    \n\n    return (\n      <div>\n        <Row>\n          <Col md={4}>\n            <Button variant=\"light\" onClick={() => this.clickCluster(0)}>Show All</Button>\n            <div style={{width:'100%', height:'420px'}}>\n              <p onClick={() => this.clickCluster(1)}><ClusterBubble number='1' name={data.clusters[1].name} percentage={data.clusters[1].percentage} x={170} y={50} radius={90} active={this.state.activeCluster[0]}/></p>\n              <p onClick={() => this.clickCluster(2)}><ClusterBubble number='2' name={data.clusters[2].name} percentage={data.clusters[2].percentage} x={50} y={200} radius={80} active={this.state.activeCluster[1]}/></p>\n              <p onClick={() => this.clickCluster(3)}><ClusterBubble number='3' name={data.clusters[3].name} percentage={data.clusters[3].percentage} x={220} y={280} radius={60} active={this.state.activeCluster[2]}/></p>\n              <p onClick={() => this.clickCluster(4)}><ClusterBubble number='4' name={data.clusters[4].name} percentage={data.clusters[4].percentage} x={20} y={80} radius={60} active={this.state.activeCluster[3]}/></p>\n            </div>\n          </Col>\n\n          <Col style={{ marginTop: '-50px' }} md={8}>\n            <Card title={this.subtitle()}>\n              <p><b>Top Words </b></p>\n              <Row>\n                <Col md={7}>\n                  <ResponsiveContainer minHeight='200px' height='100%' width='100%'>\n                  <div style={{ width: '100%', height: '100%' }}>\n                    <ReactWordcloud options={{\n                      fontFamily: 'sans-serif',\n                      rotations: 1,\n                      rotationAngles: [0, 0],\n                    }}\n                    words={data.clusters[this.state.current].words.slice(0, 100)} />\n                  </div>\n                  </ResponsiveContainer>\n                </Col>\n\n                <Col md={5}>\n                  <ResponsiveContainer minHeight='200px' height='100%' width='100%'>\n                    <BarChart data={data.clusters[this.state.current].words.slice(0, 5)} margin={{ top: 5, right: 30, left: 20, bottom: 5, }}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"text\" interval={0}/>\n                      <Tooltip />\n                      <Bar dataKey=\"value\" fill=\"#8884d8\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </Col>\n              </Row>\n\n              <Row style={{ marginTop: '40px' }}>\n                <Col md={6}>\n                  <p><b>Advertisement Categories</b></p>\n                </Col>\n\n                <Col md={6}>\n                  <p><b>Advertisement Types</b></p>\n                </Col>\n              </Row>\n\n              <Row style={{ marginBottom: '20px' }}>\n                <Col md={6}>\n                  <ResponsiveContainer minHeight='160px' height='100%' width='100%'>\n                    <PieChart>\n                      <Pie dataKey=\"value\" isAnimationActive={true} data={data.clusters[this.state.current].categories} outerRadius={80} fill=\"#8884d8\" label={renderCustomizedLabel} labelLine={false} >\n                        {\n                          data.clusters[this.state.current].categories.map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\n                        }\n                      </Pie>\n                      <Tooltip />\n                    </PieChart>\n                  </ResponsiveContainer>\n                </Col>\n\n                <Col md={6} style={{ textAlign: 'center', padding: '25px 10px' }}>\n                  <Row>\n                    <Col>\n                      <IconChart order={1} type={data.clusters[this.state.current].types[0].type} value={data.clusters[this.state.current].types[0].percentage} />\n                    </Col>\n                    <Col>\n                      <IconChart order={2} type={data.clusters[this.state.current].types[1].type} value={data.clusters[this.state.current].types[1].percentage} />\n                      <IconChart order={3} type={data.clusters[this.state.current].types[2].type} value={data.clusters[this.state.current].types[2].percentage} />\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n\n            </Card>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n\nexport default ClusterSummary","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\nimport Navbar from './Navbar'\nimport Card from './Card'\nimport LinkButton from './LinkButton'\nimport ClusterSummary from './ClusterSummary'\nimport { AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport {\n  Radar, RadarChart, PolarGrid, Legend,\n  PolarAngleAxis, PolarRadiusAxis,\n} from 'recharts';\n\nimport SimpleMap from './simple-map.png'\nimport IconUp from './icon-up.gif'\n\nimport './App.css'\n\nconst data = [\n  { name: '12:00', ClickedRate: 0.10, },\n  { name: '13:00', ClickedRate: 0.15, },\n  { name: '14:00', ClickedRate: 0.08, },\n  { name: '15:00', ClickedRate: 0.12, },\n  { name: '16:00', ClickedRate: 0.14, },\n  { name: '17:00', ClickedRate: 0.18, },\n]\n\nconst dataRadar = [\n  {A: 23, B: 77, fullMark: 100,},\n  {A: 21, B: 79, fullMark: 100,},\n  {A: 8, B: 92, fullMark: 100,},\n  {A: 12, B: 88, fullMark: 100,},\n  {A: 6, B: 94, fullMark: 100,},\n  {A: 7, B: 93, fullMark: 100,},\n  {A: 12, B: 88, fullMark: 100,},\n  {A: 14, B: 86, fullMark: 100,},\n  {A: 16, B: 84, fullMark: 100,},\n  {A: 31, B: 69, fullMark: 100,},\n  {A: 34, B: 66, fullMark: 100,},\n  {A: 35, B: 65, fullMark: 100,},\n  {A: 40, B: 60, fullMark: 100,},\n  {A: 32, B: 68, fullMark: 100,},\n  {A: 18, B: 82, fullMark: 100,},\n  {A: 16, B: 84, fullMark: 100,},\n  {A: 15, B: 85, fullMark: 100,},\n  {A: 14, B: 86, fullMark: 100,},\n  {A: 17, B: 83, fullMark: 100,},\n  {A: 14, B: 86, fullMark: 100,},\n  {A: 12, B: 88, fullMark: 100,},\n  {A: 21, B: 79, fullMark: 100,},\n  {A: 26, B: 74, fullMark: 100,},\n  {A: 24, B: 76, fullMark: 100,},\n];\n\nfunction App() {\n  return (\n    <div>\n      <Navbar />\n      <div style={{ height: '100px' }}></div>\n      <Container style={{ padding: '30px 0px' }}>\n        {/* Header Row */}\n        <Row noGutters>\n          <Col md={4}>\n            <Card title=\"Clicked Rate\">\n              <div style={{ position: 'absolute', right: '30px', top: '30px', fontWeight: 'bold', fontSize: '32px' }}>\n                18%<img src={IconUp} width=\"34x\" />\n              </div>\n              <ResponsiveContainer minHeight='160px' height='100%' width='100%'>\n                <AreaChart data={data} margin={{ top: 12, right: 30, left: 0, bottom: 10, }}>\n                  <defs>\n                    <linearGradient id=\"color\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                      <stop offset=\"5%\" stopColor=\"#82ca9d\" stopOpacity={0.8} />\n                      <stop offset=\"95%\" stopColor=\"#82ca9d\" stopOpacity={0} />\n                    </linearGradient>\n                  </defs>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Area type=\"monotone\" dataKey=\"ClickedRate\" stroke=\"#82ca9d\" fillOpacity={1} fill=\"url(#color)\" />\n                </AreaChart>\n              </ResponsiveContainer>\n            </Card>\n          </Col>\n          <Col md={3}>\n            <Card title=\"Advertisement\">\n              <p style={{ textAlign: 'left' }}>\n                Total Ads\n              <span style={{ float: 'right' }}>\n                  <b>1,412</b>\n                </span>\n              </p>\n              <p style={{ textAlign: 'left' }}>\n                Active Ads\n              <span style={{ float: 'right' }}>\n                  <b>374</b>\n                </span>\n              </p>\n            </Card>\n          </Col>\n          <Col md={5}>\n            <Card title=\"Top Ads\">\n              <LinkButton title=\"Cloned 5thgeneration orchestration\" tailing=\"10%\" />\n              <LinkButton title=\"Monitored national standardization\" tailing=\"9%\" />\n              <LinkButton title=\"Organic bottom-line service-desk\" tailing=\"9%\" />\n            </Card>\n          </Col>\n        </Row>\n\n        {/* Custer Row */}\n        <Row noGutters>\n          <Col>\n            <Card title=\"Cluster Summary\">\n              <ClusterSummary />\n            </Card>\n          </Col>\n        </Row>\n\n        {/* Bottom Row */}\n        <Row noGutters>\n          <Col md={4}>\n            <Card title=\"Ad Stream by Country\">\n              <ResponsiveContainer minHeight='160px' height='100%' width='100%'>\n                <img src={SimpleMap} />\n              </ResponsiveContainer>\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card title=\"Top Website Clicked Rate\">\n              <LinkButton title=\"yantip.com\" tailing=\"24%\" />\n              <LinkButton title=\"tinaja.com\" tailing=\"18%\" />\n              <LinkButton title=\"somyud.co.th\" tailing=\"16%\" />\n            </Card>\n          </Col>\n          <Col md={4}>\n            <Card title=\"Click/Not Click in Each Hour\">\n              <ResponsiveContainer minHeight='240px' height='100%' width='100%' >\n                <RadarChart outerRadius={120} data={dataRadar} >\n                  <PolarGrid />\n                  <Radar name=\"Click\" dataKey=\"A\" stroke=\"#8884d8\" fill=\"#8884d8\" fillOpacity={0.5} />\n                  <Radar name=\"Not Click\" dataKey=\"B\" stroke=\"#82ca9d\" fill=\"#82ca9d\" fillOpacity={0.5} />\n                  <Legend align=\"center\" verticalAlign=\"bottom\" />\n                  <Tooltip />\n                </RadarChart>\n              </ResponsiveContainer>\n              <div style={{height:'20px'}}></div>\n            </Card>\n          </Col>\n        </Row>\n\n      </Container>\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport Dashboard from './Dashboard'\nimport './App.css'\n\nfunction App() {\n  return (\n    <Dashboard />\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}